// <auto-generated />
using System;
using Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(RapidPayContext))]
    [Migration("20220818180247_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Models.Cards", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("CVV")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Numbers")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<int>("UserCreatorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Numbers")
                        .IsUnique()
                        .HasName("Uq_Cards_Numbers");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Balance = 1000000m,
                            CVV = "001",
                            CreationTime = new DateTime(2022, 8, 18, 12, 2, 47, 369, DateTimeKind.Local).AddTicks(4367),
                            Numbers = "400024001234567",
                            UserCreatorId = 1
                        },
                        new
                        {
                            Id = 2,
                            Balance = 1000000m,
                            CVV = "001",
                            CreationTime = new DateTime(2022, 8, 18, 12, 2, 47, 370, DateTimeKind.Local).AddTicks(3843),
                            Numbers = "500024001234567",
                            UserCreatorId = 2
                        });
                });

            modelBuilder.Entity("Domain.Models.Records", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("CardId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Fee")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("PaymentReference")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("UserCreatorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("PaymentReference")
                        .IsUnique()
                        .HasName("Uq_Records_Reference");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("Domain.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Password")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("UserCreatorId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasName("Uq_User_UserName");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "123",
                            UserCreatorId = 0,
                            UserName = "RoyMartinez"
                        },
                        new
                        {
                            Id = 2,
                            CreationTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "123",
                            UserCreatorId = 0,
                            UserName = "JuanPerez"
                        });
                });

            modelBuilder.Entity("Domain.Models.Records", b =>
                {
                    b.HasOne("Domain.Models.Cards", "Card")
                        .WithMany("Records")
                        .HasForeignKey("CardId")
                        .HasConstraintName("fk_Records_Cards")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
